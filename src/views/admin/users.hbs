<!-- Page Header -->
<div class="flex items-center justify-between mb-8">
    <div>
        <nav class="flex text-sm text-slate-500 dark:text-slate-400 mb-2">
            <a href="/admin" class="hover:text-blue-600 dark:hover:text-blue-400">Dashboard</a>
            <span class="mx-2">/</span>
            <span class="text-slate-900 dark:text-white">Users Management</span>
        </nav>
        <h1 class="text-3xl font-bold text-slate-900 dark:text-white">Users Management</h1>
        <p class="text-slate-600 dark:text-slate-400 mt-2">Manage user accounts and permissions</p>
    </div>
    <button onclick="showCreateUserModal()" class="inline-flex items-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium transition-colors">
        <i class="fas fa-plus mr-2"></i>
        Add New User
    </button>
</div>

<!-- Statistics Cards -->
<div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
    <div class="bg-white dark:bg-slate-800 rounded-xl border border-slate-200 dark:border-slate-700 p-6">
        <div class="flex items-center">
            <div class="p-3 bg-blue-100 dark:bg-blue-900/30 rounded-lg">
                <i class="fas fa-users text-xl text-blue-600 dark:text-blue-400"></i>
            </div>
            <div class="ml-4">
                <p class="text-sm text-slate-600 dark:text-slate-400">Total Users</p>
                <p class="text-2xl font-bold text-slate-900 dark:text-white">{{stats.totalUsers}}</p>
            </div>
        </div>
    </div>
    
    <div class="bg-white dark:bg-slate-800 rounded-xl border border-slate-200 dark:border-slate-700 p-6">
        <div class="flex items-center">
            <div class="p-3 bg-green-100 dark:bg-green-900/30 rounded-lg">
                <i class="fas fa-user-check text-xl text-green-600 dark:text-green-400"></i>
            </div>
            <div class="ml-4">
                <p class="text-sm text-slate-600 dark:text-slate-400">Active Users</p>
                <p class="text-2xl font-bold text-slate-900 dark:text-white">{{stats.activeUsers}}</p>
            </div>
        </div>
    </div>
    
    <div class="bg-white dark:bg-slate-800 rounded-xl border border-slate-200 dark:border-slate-700 p-6">
        <div class="flex items-center">
            <div class="p-3 bg-purple-100 dark:bg-purple-900/30 rounded-lg">
                <i class="fas fa-user-shield text-xl text-purple-600 dark:text-purple-400"></i>
            </div>
            <div class="ml-4">
                <p class="text-sm text-slate-600 dark:text-slate-400">Administrators</p>
                <p class="text-2xl font-bold text-slate-900 dark:text-white">{{stats.adminUsers}}</p>
            </div>
        </div>
    </div>
</div>

<!-- Filters & Search -->
<div class="bg-white dark:bg-slate-800 rounded-xl border border-slate-200 dark:border-slate-700 p-6 mb-6">
    <form method="GET" class="grid grid-cols-1 md:grid-cols-4 gap-4">
        <!-- Search -->
        <div>
            <label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-2">Search</label>
            <input type="text" name="search" value="{{filters.search}}" placeholder="Search by name or email..." 
                   class="w-full rounded-lg border border-slate-300 dark:border-slate-600 bg-white dark:bg-slate-700 px-3 py-2 text-slate-900 dark:text-white placeholder-slate-500 dark:placeholder-slate-400 focus:border-blue-500 focus:ring-blue-500">
        </div>
        
        <!-- Role Filter -->
        <div>
            <label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-2">Role</label>
            <select name="role" class="w-full rounded-lg border border-slate-300 dark:border-slate-600 bg-white dark:bg-slate-700 px-3 py-2 text-slate-900 dark:text-white focus:border-blue-500 focus:ring-blue-500">
                <option value="">All Roles</option>
                <option value="ADMIN" {{#if (eq filters.role 'ADMIN')}}selected{{/if}}>Administrator</option>
                <option value="USER" {{#if (eq filters.role 'USER')}}selected{{/if}}>User</option>
            </select>
        </div>
        
        <!-- Status Filter -->
        <div>
            <label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-2">Status</label>
            <select name="status" class="w-full rounded-lg border border-slate-300 dark:border-slate-600 bg-white dark:bg-slate-700 px-3 py-2 text-slate-900 dark:text-white focus:border-blue-500 focus:ring-blue-500">
                <option value="">All Status</option>
                <option value="ACTIVE" {{#if (eq filters.status 'ACTIVE')}}selected{{/if}}>Active</option>
                <option value="INACTIVE" {{#if (eq filters.status 'INACTIVE')}}selected{{/if}}>Inactive</option>
            </select>
        </div>
        
        <!-- Actions -->
        <div class="flex items-end space-x-2">
            <button type="submit" class="flex-1 bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                <i class="fas fa-search mr-2"></i>Filter
            </button>
            <a href="/admin/users" class="bg-slate-500 hover:bg-slate-600 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                <i class="fas fa-times"></i>
            </a>
        </div>
    </form>
</div>

<!-- Bulk Actions Bar (Hidden by default) -->
<div id="bulkActionsBar" class="hidden bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4 mb-6">
    <div class="flex items-center justify-between">
        <div class="text-blue-800 dark:text-blue-200">
            <i class="fas fa-info-circle mr-2"></i>
            <span id="selectedCount">0</span> user(s) selected
        </div>
        <div class="flex items-center space-x-3">
            <select id="bulkAction" class="rounded border border-blue-300 dark:border-blue-600 bg-white dark:bg-slate-700 px-3 py-1 text-sm text-slate-900 dark:text-white">
                <option value="">Choose action...</option>
                <option value="activate">Activate</option>
                <option value="deactivate">Deactivate</option>
                <option value="promote">Promote to Admin</option>
                <option value="demote">Demote to User</option>
                <option value="delete">Delete</option>
            </select>
            <button onclick="executeBulkAction()" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-1 rounded text-sm font-medium transition-colors">
                Execute
            </button>
        </div>
    </div>
</div>

<!-- Users List -->
<div class="bg-white dark:bg-slate-800 rounded-xl border border-slate-200 dark:border-slate-700 overflow-hidden">
    {{#if users.length}}
        <!-- Table Header -->
        <div class="px-6 py-4 border-b border-slate-200 dark:border-slate-700 bg-slate-50 dark:bg-slate-900/50">
            <div class="flex items-center">
                <input type="checkbox" id="select-all" class="rounded border-slate-300 text-blue-600 focus:ring-blue-500 dark:border-slate-600 dark:bg-slate-700">
                <label for="select-all" class="ml-3 text-sm font-medium text-slate-700 dark:text-slate-300">Select all</label>
            </div>
        </div>

        <!-- Users Grid -->
        <div class="p-6">
            <div class="grid gap-6">
                {{#each users}}
                    <div class="flex items-center p-4 border border-slate-200 dark:border-slate-700 rounded-lg hover:bg-slate-50 dark:hover:bg-slate-700/50 transition-colors">
                        <!-- Checkbox -->
                        <div class="flex-shrink-0 mr-4">
                            <input type="checkbox" value="{{id}}" class="user-checkbox rounded border-slate-300 text-blue-600 focus:ring-blue-500 dark:border-slate-600 dark:bg-slate-700">
                        </div>

                        <!-- Avatar -->
                        <div class="flex-shrink-0 mr-4">
                            <div class="w-12 h-12 bg-slate-200 dark:bg-slate-600 rounded-full flex items-center justify-center">
                                {{#if avatar}}
                                    <img src="{{avatar}}" alt="{{firstName}} {{lastName}}" class="w-12 h-12 rounded-full object-cover">
                                {{else}}
                                    <i class="fas fa-user text-slate-500 dark:text-slate-400"></i>
                                {{/if}}
                            </div>
                        </div>

                        <!-- User Info -->
                        <div class="flex-1 min-w-0">
                            <div class="flex items-start justify-between">
                                <div class="flex-1">
                                    <div class="flex items-center space-x-3 mb-1">
                                        <h3 class="text-lg font-semibold text-slate-900 dark:text-white truncate">
                                            {{firstName}} {{lastName}}
                                        </h3>
                                        
                                        <!-- Role Badge -->
                                        <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium {{#if (eq role 'ADMIN')}}bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-400{{else}}bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-400{{/if}}">
                                            {{#if (eq role 'ADMIN')}}
                                                <i class="fas fa-shield-alt mr-1"></i>Admin
                                            {{else}}
                                                <i class="fas fa-user mr-1"></i>User
                                            {{/if}}
                                        </span>

                                        <!-- Status Badge -->
                                        <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium {{#if (eq status 'ACTIVE')}}bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-400{{else}}bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-400{{/if}}">
                                            {{#if (eq status 'ACTIVE')}}
                                                <i class="fas fa-check-circle mr-1"></i>Active
                                            {{else}}
                                                <i class="fas fa-ban mr-1"></i>Inactive
                                            {{/if}}
                                        </span>
                                    </div>
                                    
                                    <div class="space-y-1">
                                        <p class="text-sm text-slate-600 dark:text-slate-400">
                                            <i class="fas fa-envelope mr-2 w-4"></i>{{email}}
                                        </p>
                                        <p class="text-sm text-slate-600 dark:text-slate-400">
                                            <i class="fas fa-user mr-2 w-4"></i>@{{username}}
                                        </p>
                                        <p class="text-sm text-slate-500 dark:text-slate-500">
                                            <i class="fas fa-calendar mr-2 w-4"></i>Joined {{formatDate createdAt}}
                                        </p>
                                    </div>
                                </div>

                                <!-- Actions -->
                                <div class="flex items-center space-x-2 ml-4">
                                    <button onclick="editUser({{id}})" class="text-slate-400 hover:text-blue-600 dark:hover:text-blue-400 p-2 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-600 transition-colors" title="Edit User">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    {{#unless (eq ../user.id id)}}
                                        <button onclick="deleteUser({{id}})" class="text-slate-400 hover:text-red-600 dark:hover:text-red-400 p-2 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-600 transition-colors" title="Delete User">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    {{/unless}}
                                </div>
                            </div>
                        </div>
                    </div>
                {{/each}}
            </div>
        </div>
    {{else}}
        <!-- Empty State -->
        <div class="text-center py-12">
            <div class="w-24 h-24 bg-slate-100 dark:bg-slate-700 rounded-full flex items-center justify-center mx-auto mb-4">
                <i class="fas fa-users text-3xl text-slate-400"></i>
            </div>
            <h3 class="text-lg font-medium text-slate-900 dark:text-white mb-2">No users found</h3>
            <p class="text-slate-500 dark:text-slate-400 mb-6">Start by creating your first user account.</p>
            <button onclick="showCreateUserModal()" class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
                <i class="fas fa-plus mr-2"></i>
                Add New User
            </button>
        </div>
    {{/if}}

    <!-- Pagination -->
    {{#if pagination}}
        <div class="bg-white dark:bg-slate-800 border-t border-slate-200 dark:border-slate-700 px-6 py-4">
            <div class="flex items-center justify-between">
                <div class="text-sm text-slate-700 dark:text-slate-300">
                    Showing <span class="font-medium">{{add (mul (sub pagination.currentPage 1) pagination.limit) 1}}</span> to 
                    <span class="font-medium">{{#if (gt pagination.totalPages pagination.currentPage)}}{{mul pagination.currentPage pagination.limit}}{{else}}{{pagination.totalItems}}{{/if}}</span> 
                    of <span class="font-medium">{{pagination.totalItems}}</span> users
                </div>
                
                <div class="flex items-center space-x-2">
                    {{#if pagination.hasPrevious}}
                        <a href="?page={{sub pagination.currentPage 1}}{{#if filters.search}}&search={{filters.search}}{{/if}}{{#if filters.role}}&role={{filters.role}}{{/if}}{{#if filters.status}}&status={{filters.status}}{{/if}}" 
                           class="inline-flex items-center px-3 py-2 text-sm border border-slate-300 dark:border-slate-600 rounded-lg text-slate-700 dark:text-slate-300 bg-white dark:bg-slate-700 hover:bg-slate-50 dark:hover:bg-slate-600 transition-colors">
                            <i class="fas fa-chevron-left mr-1"></i>
                            Previous
                        </a>
                    {{/if}}
                    
                    {{#each pagination.pages}}
                        {{#if current}}
                            <span class="inline-flex items-center px-3 py-2 text-sm bg-blue-600 text-white rounded-lg">{{number}}</span>
                        {{else}}
                            <a href="{{url}}" class="inline-flex items-center px-3 py-2 text-sm border border-slate-300 dark:border-slate-600 rounded-lg text-slate-700 dark:text-slate-300 bg-white dark:bg-slate-700 hover:bg-slate-50 dark:hover:bg-slate-600 transition-colors">{{number}}</a>
                        {{/if}}
                    {{/each}}
                    
                    {{#if pagination.hasNext}}
                        <a href="?page={{add pagination.currentPage 1}}{{#if filters.search}}&search={{filters.search}}{{/if}}{{#if filters.role}}&role={{filters.role}}{{/if}}{{#if filters.status}}&status={{filters.status}}{{/if}}" 
                           class="inline-flex items-center px-3 py-2 text-sm border border-slate-300 dark:border-slate-600 rounded-lg text-slate-700 dark:text-slate-300 bg-white dark:bg-slate-700 hover:bg-slate-50 dark:hover:bg-slate-600 transition-colors">
                            Next
                            <i class="fas fa-chevron-right ml-1"></i>
                        </a>
                    {{/if}}
                </div>
            </div>
        </div>
    {{/if}}
</div>

<!-- Create User Modal -->
<div id="createUserModal" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden flex items-center justify-center p-4">
    <div class="bg-white dark:bg-slate-800 rounded-xl max-w-md w-full max-h-[90vh] overflow-y-auto">
        <div class="p-6">
            <div class="flex items-center justify-between mb-4">
                <h3 class="text-lg font-semibold text-slate-900 dark:text-white">Add New User</h3>
                <button onclick="hideCreateUserModal()" class="text-slate-400 hover:text-slate-600 dark:hover:text-slate-300">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            
            <form id="createUserForm" class="space-y-4">
                <div class="grid grid-cols-2 gap-4">
                    <div>
                        <label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">First Name</label>
                        <input type="text" name="firstName" required class="w-full rounded-lg border border-slate-300 dark:border-slate-600 bg-white dark:bg-slate-700 px-3 py-2 text-slate-900 dark:text-white focus:border-blue-500 focus:ring-blue-500">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">Last Name</label>
                        <input type="text" name="lastName" required class="w-full rounded-lg border border-slate-300 dark:border-slate-600 bg-white dark:bg-slate-700 px-3 py-2 text-slate-900 dark:text-white focus:border-blue-500 focus:ring-blue-500">
                    </div>
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">Username</label>
                    <input type="text" name="username" required class="w-full rounded-lg border border-slate-300 dark:border-slate-600 bg-white dark:bg-slate-700 px-3 py-2 text-slate-900 dark:text-white focus:border-blue-500 focus:ring-blue-500">
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">Email</label>
                    <input type="email" name="email" required class="w-full rounded-lg border border-slate-300 dark:border-slate-600 bg-white dark:bg-slate-700 px-3 py-2 text-slate-900 dark:text-white focus:border-blue-500 focus:ring-blue-500">
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">Password</label>
                    <input type="password" name="password" required class="w-full rounded-lg border border-slate-300 dark:border-slate-600 bg-white dark:bg-slate-700 px-3 py-2 text-slate-900 dark:text-white focus:border-blue-500 focus:ring-blue-500">
                </div>
                
                <div class="grid grid-cols-2 gap-4">
                    <div>
                        <label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">Role</label>
                        <select name="role" class="w-full rounded-lg border border-slate-300 dark:border-slate-600 bg-white dark:bg-slate-700 px-3 py-2 text-slate-900 dark:text-white focus:border-blue-500 focus:ring-blue-500">
                            <option value="USER">User</option>
                            <option value="ADMIN">Administrator</option>
                        </select>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">Status</label>
                        <select name="status" class="w-full rounded-lg border border-slate-300 dark:border-slate-600 bg-white dark:bg-slate-700 px-3 py-2 text-slate-900 dark:text-white focus:border-blue-500 focus:ring-blue-500">
                            <option value="ACTIVE">Active</option>
                            <option value="INACTIVE">Inactive</option>
                        </select>
                    </div>
                </div>
                
                <div class="flex items-center justify-end space-x-3 pt-4">
                    <button type="button" onclick="hideCreateUserModal()" class="px-4 py-2 text-slate-600 dark:text-slate-400 hover:text-slate-800 dark:hover:text-slate-200">
                        Cancel
                    </button>
                    <button type="submit" class="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium transition-colors">
                        Create User
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit User Modal -->
<div id="editUserModal" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden flex items-center justify-center p-4">
    <div class="bg-white dark:bg-slate-800 rounded-xl max-w-md w-full max-h-[90vh] overflow-y-auto">
        <div class="p-6">
            <div class="flex items-center justify-between mb-4">
                <h3 class="text-lg font-semibold text-slate-900 dark:text-white">Edit User</h3>
                <button onclick="hideEditUserModal()" class="text-slate-400 hover:text-slate-600 dark:hover:text-slate-300">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            
            <form id="editUserForm" class="space-y-4">
                <input type="hidden" name="userId" id="editUserId">
                
                <div class="grid grid-cols-2 gap-4">
                    <div>
                        <label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">First Name</label>
                        <input type="text" name="firstName" id="editFirstName" required class="w-full rounded-lg border border-slate-300 dark:border-slate-600 bg-white dark:bg-slate-700 px-3 py-2 text-slate-900 dark:text-white focus:border-blue-500 focus:ring-blue-500">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">Last Name</label>
                        <input type="text" name="lastName" id="editLastName" required class="w-full rounded-lg border border-slate-300 dark:border-slate-600 bg-white dark:bg-slate-700 px-3 py-2 text-slate-900 dark:text-white focus:border-blue-500 focus:ring-blue-500">
                    </div>
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">Username</label>
                    <input type="text" name="username" id="editUsername" required class="w-full rounded-lg border border-slate-300 dark:border-slate-600 bg-white dark:bg-slate-700 px-3 py-2 text-slate-900 dark:text-white focus:border-blue-500 focus:ring-blue-500">
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">Email</label>
                    <input type="email" name="email" id="editEmail" required class="w-full rounded-lg border border-slate-300 dark:border-slate-600 bg-white dark:bg-slate-700 px-3 py-2 text-slate-900 dark:text-white focus:border-blue-500 focus:ring-blue-500">
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">Password</label>
                    <input type="password" name="password" id="editPassword" placeholder="Leave blank to keep current password" class="w-full rounded-lg border border-slate-300 dark:border-slate-600 bg-white dark:bg-slate-700 px-3 py-2 text-slate-900 dark:text-white focus:border-blue-500 focus:ring-blue-500">
                    <p class="text-xs text-slate-500 dark:text-slate-400 mt-1">Leave blank to keep current password</p>
                </div>
                
                <div class="grid grid-cols-2 gap-4">
                    <div>
                        <label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">Role</label>
                        <select name="role" id="editRole" class="w-full rounded-lg border border-slate-300 dark:border-slate-600 bg-white dark:bg-slate-700 px-3 py-2 text-slate-900 dark:text-white focus:border-blue-500 focus:ring-blue-500">
                            <option value="USER">User</option>
                            <option value="ADMIN">Administrator</option>
                        </select>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">Status</label>
                        <select name="status" id="editStatus" class="w-full rounded-lg border border-slate-300 dark:border-slate-600 bg-white dark:bg-slate-700 px-3 py-2 text-slate-900 dark:text-white focus:border-blue-500 focus:ring-blue-500">
                            <option value="ACTIVE">Active</option>
                            <option value="INACTIVE">Inactive</option>
                        </select>
                    </div>
                </div>
                
                <div class="flex items-center justify-end space-x-3 pt-4">
                    <button type="button" onclick="hideEditUserModal()" class="px-4 py-2 text-slate-600 dark:text-slate-400 hover:text-slate-800 dark:hover:text-slate-200">
                        Cancel
                    </button>
                    <button type="submit" class="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium transition-colors">
                        Update User
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
// Select all functionality
document.getElementById('select-all').addEventListener('change', function() {
    const checkboxes = document.querySelectorAll('.user-checkbox');
    
    checkboxes.forEach(checkbox => {
        checkbox.checked = this.checked;
    });
    
    updateBulkActionsBar();
});

// Individual checkbox handling
document.addEventListener('change', function(e) {
    if (e.target.classList.contains('user-checkbox')) {
        updateBulkActionsBar();
    }
});

function updateBulkActionsBar() {
    const checkboxes = document.querySelectorAll('.user-checkbox:checked');
    const bulkActionsBar = document.getElementById('bulkActionsBar');
    const selectedCount = document.getElementById('selectedCount');
    
    if (checkboxes.length > 0) {
        bulkActionsBar.classList.remove('hidden');
        selectedCount.textContent = checkboxes.length;
    } else {
        bulkActionsBar.classList.add('hidden');
    }
    
    // Update select all checkbox
    const allCheckboxes = document.querySelectorAll('.user-checkbox');
    const selectAllCheckbox = document.getElementById('select-all');
    selectAllCheckbox.checked = allCheckboxes.length > 0 && checkboxes.length === allCheckboxes.length;
    selectAllCheckbox.indeterminate = checkboxes.length > 0 && checkboxes.length < allCheckboxes.length;
}

// Bulk actions
function executeBulkAction() {
    const action = document.getElementById('bulkAction').value;
    const checkboxes = document.querySelectorAll('.user-checkbox:checked');
    
    if (!action) {
        showNotification('Please select an action', 'warning');
        return;
    }
    
    if (checkboxes.length === 0) {
        showNotification('Please select at least one user', 'warning');
        return;
    }
    
    const userIds = Array.from(checkboxes).map(cb => cb.value);
    const actionText = {
        'activate': 'activate',
        'deactivate': 'deactivate', 
        'promote': 'promote to admin',
        'demote': 'demote to user',
        'delete': 'delete'
    };
    
    if (action === 'delete') {
        if (!confirm(`Are you sure you want to delete ${userIds.length} selected user(s)? This action cannot be undone.`)) {
            return;
        }
    } else {
        if (!confirm(`Are you sure you want to ${actionText[action]} ${userIds.length} selected user(s)?`)) {
            return;
        }
    }
    
    fetch('/admin/users/bulk-update', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ action, userIds })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            showNotification(data.message, 'success');
            setTimeout(() => window.location.reload(), 1500);
        } else {
            showNotification(data.message, 'error');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        showNotification('An error occurred while performing the action', 'error');
    });
}

// Modal functions
function showCreateUserModal() {
    document.getElementById('createUserModal').classList.remove('hidden');
}

function hideCreateUserModal() {
    document.getElementById('createUserModal').classList.add('hidden');
    document.getElementById('createUserForm').reset();
}

function showEditUserModal() {
    document.getElementById('editUserModal').classList.remove('hidden');
}

function hideEditUserModal() {
    document.getElementById('editUserModal').classList.add('hidden');
    document.getElementById('editUserForm').reset();
}

// Create user
document.getElementById('createUserForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    const userData = Object.fromEntries(formData.entries());
    
    fetch('/admin/users', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(userData)
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            hideCreateUserModal();
            showNotification('User created successfully', 'success');
            setTimeout(() => window.location.reload(), 1500);
        } else {
            showNotification(data.message, 'error');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        showNotification('An error occurred while creating user', 'error');
    });
});

// Edit user
function editUser(userId) {
    // Show loading state
    showNotification('Loading user data...', 'info');
    
    // Fetch user data from API
    fetch(`/admin/users/${userId}`)
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            const user = data.user;
            
            // Populate form with user data
            document.getElementById('editUserId').value = user.id;
            document.getElementById('editFirstName').value = user.firstName || '';
            document.getElementById('editLastName').value = user.lastName || '';
            document.getElementById('editEmail').value = user.email || '';
            document.getElementById('editUsername').value = user.username || '';
            document.getElementById('editRole').value = user.role || 'USER';
            document.getElementById('editStatus').value = user.status || 'ACTIVE';
            
            // Clear password field (should be empty for editing)
            document.getElementById('editPassword').value = '';
            
            // Show modal
            showEditUserModal();
        } else {
            showNotification(data.message || 'Error loading user data', 'error');
        }
    })
    .catch(error => {
        console.error('Error fetching user data:', error);
        showNotification('An error occurred while loading user data', 'error');
    });
}

document.getElementById('editUserForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    const userData = Object.fromEntries(formData.entries());
    const userId = userData.userId;
    delete userData.userId;
    
    fetch(`/admin/users/${userId}`, {
        method: 'PUT',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(userData)
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            hideEditUserModal();
            showNotification('User updated successfully', 'success');
            setTimeout(() => window.location.reload(), 1500);
        } else {
            showNotification(data.message, 'error');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        showNotification('An error occurred while updating user', 'error');
    });
});

// Delete user
function deleteUser(userId) {
    if (!confirm('Are you sure you want to delete this user? This action cannot be undone.')) {
        return;
    }
    
    fetch(`/admin/users/${userId}`, {
        method: 'DELETE',
        headers: {
            'Content-Type': 'application/json',
        }
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            showNotification(data.message, 'success');
            setTimeout(() => window.location.reload(), 1500);
        } else {
            showNotification(data.message, 'error');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        showNotification('An error occurred while deleting user', 'error');
    });
}

// Notification function
function showNotification(message, type = 'info') {
    // Remove existing notifications
    const existingNotifications = document.querySelectorAll('.notification-toast');
    existingNotifications.forEach(notification => notification.remove());
    
    // Create notification element
    const notification = document.createElement('div');
    notification.className = `notification-toast fixed top-4 right-4 z-50 px-6 py-4 rounded-lg shadow-lg text-white font-medium transform translate-x-full transition-transform duration-300 ${
        type === 'success' ? 'bg-green-500' : 
        type === 'error' ? 'bg-red-500' : 
        type === 'warning' ? 'bg-yellow-500' : 
        'bg-blue-500'
    }`;
    
    notification.innerHTML = `
        <div class="flex items-center">
            <i class="fas ${
                type === 'success' ? 'fa-check-circle' : 
                type === 'error' ? 'fa-exclamation-circle' : 
                type === 'warning' ? 'fa-exclamation-triangle' : 
                'fa-info-circle'
            } mr-2"></i>
            ${message}
            <button onclick="this.parentElement.parentElement.remove()" class="ml-4 text-white/80 hover:text-white">
                <i class="fas fa-times"></i>
            </button>
        </div>
    `;
    
    document.body.appendChild(notification);
    
    // Show notification
    setTimeout(() => {
        notification.style.transform = 'translateX(0)';
    }, 100);
    
    // Hide notification after 5 seconds
    setTimeout(() => {
        if (notification.parentElement) {
            notification.style.transform = 'translateX(100%)';
            setTimeout(() => {
                if (notification.parentElement) {
                    notification.remove();
                }
            }, 300);
        }
    }, 5000);
}
</script>
